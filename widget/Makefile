#############################################################################
# Makefile for building: libpluginGLWidget.so
# Generated by qmake (2.01a) (Qt 4.2.1) on: dt. juny 2 12:17:27 2009
# Project:  widget.pro
# Template: lib
# Command: /usr/bin/qmake -unix -o Makefile widget.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQT_NO_DEBUG -DQT_PLUGIN -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQDESIGNER_EXPORT_WIDGETS -DQT_SHARED
CFLAGS        = -pipe -O2 -D_REENTRANT -Wall -W -fPIC  $(DEFINES)
CXXFLAGS      = -pipe -O2 -D_REENTRANT -Wall -W -fPIC  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtDesigner -I/usr/include/QtCore -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include/QtOpenGL -I/usr/include/QtXml -I/usr/include/QtXml -I/usr/include -I/usr/X11R6/include -I.moc -I.
LINK          = g++
LFLAGS        = -shared
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtXml -L/usr/lib -lQtOpenGL -L/usr/X11R6/lib -lQtGui -lpng -lSM -lICE -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -ldl -lQtDesigner -lGLU -lGL -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = GLWidgetPlugin.cpp \
		GLWidget.cpp \
		Object.cpp \
		ObjectRef.cpp \
		Face.cpp \
		Vertex.cpp \
		Color.cpp \
		Box.cpp \
		Material.cpp \
		MaterialLib.cpp \
		Point.cpp \
		Scene.cpp \
		Tauler.cpp \
		uiLlums/boto.cpp \
		uiLlums/finestraLlums.cpp \
		uiLlums/sliderText.cpp \
		uiLlums/textField.cpp .moc/moc_GLWidgetPlugin.cpp \
		.moc/moc_GLWidget.cpp \
		.moc/moc_boto.cpp \
		.moc/moc_finestraLlums.cpp \
		.moc/moc_sliderText.cpp \
		.moc/moc_textField.cpp
OBJECTS       = .obj/GLWidgetPlugin.o \
		.obj/GLWidget.o \
		.obj/Object.o \
		.obj/ObjectRef.o \
		.obj/Face.o \
		.obj/Vertex.o \
		.obj/Color.o \
		.obj/Box.o \
		.obj/Material.o \
		.obj/MaterialLib.o \
		.obj/Point.o \
		.obj/Scene.o \
		.obj/Tauler.o \
		.obj/boto.o \
		.obj/finestraLlums.o \
		.obj/sliderText.o \
		.obj/textField.o \
		.obj/moc_GLWidgetPlugin.o \
		.obj/moc_GLWidget.o \
		.obj/moc_boto.o \
		.obj/moc_finestraLlums.o \
		.obj/moc_sliderText.o \
		.obj/moc_textField.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/designer.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		widget.pro
QMAKE_TARGET  = pluginGLWidget
DESTDIR       = 
TARGET        = libpluginGLWidget.so
TARGETD       = libpluginGLWidget.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)



Makefile: widget.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/designer.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtCore.prl \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtDesigner.prl
	$(QMAKE) -unix -o Makefile widget.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/designer.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtCore.prl:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtDesigner.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile widget.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/pluginGLWidget1.0.0 || $(MKDIR) .obj/pluginGLWidget1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/pluginGLWidget1.0.0/ && $(COPY_FILE) --parents GLWidgetPlugin.h GLWidget.h Object.h ObjectRef.h Face.h Vertex.h Color.h Box.h Material.h MaterialLib.h Point.h Scene.h Tauler.h uiLlums/boto.h uiLlums/finestraLlums.h uiLlums/llum.h uiLlums/sliderText.h uiLlums/textField.h uiLlums/ui_EditorLlums.h .obj/pluginGLWidget1.0.0/ && $(COPY_FILE) --parents GLWidgetPlugin.cpp GLWidget.cpp Object.cpp ObjectRef.cpp Face.cpp Vertex.cpp Color.cpp Box.cpp Material.cpp MaterialLib.cpp Point.cpp Scene.cpp Tauler.cpp uiLlums/boto.cpp uiLlums/finestraLlums.cpp uiLlums/sliderText.cpp uiLlums/textField.cpp .obj/pluginGLWidget1.0.0/ && (cd `dirname .obj/pluginGLWidget1.0.0` && $(TAR) pluginGLWidget1.0.0.tar pluginGLWidget1.0.0 && $(COMPRESS) pluginGLWidget1.0.0.tar) && $(MOVE) `dirname .obj/pluginGLWidget1.0.0`/pluginGLWidget1.0.0.tar.gz . && $(DEL_FILE) -r .obj/pluginGLWidget1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/bin/moc:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: .moc/moc_GLWidgetPlugin.cpp .moc/moc_GLWidget.cpp .moc/moc_boto.cpp .moc/moc_finestraLlums.cpp .moc/moc_sliderText.cpp .moc/moc_textField.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) .moc/moc_GLWidgetPlugin.cpp .moc/moc_GLWidget.cpp .moc/moc_boto.cpp .moc/moc_finestraLlums.cpp .moc/moc_sliderText.cpp .moc/moc_textField.cpp
.moc/moc_GLWidgetPlugin.cpp: GLWidgetPlugin.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) GLWidgetPlugin.h -o .moc/moc_GLWidgetPlugin.cpp

.moc/moc_GLWidget.cpp: Point.h \
		Scene.h \
		ObjectRef.h \
		Color.h \
		Object.h \
		Vertex.h \
		Box.h \
		Face.h \
		MaterialLib.h \
		Material.h \
		Tauler.h \
		GLWidget.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) GLWidget.h -o .moc/moc_GLWidget.cpp

.moc/moc_boto.cpp: uiLlums/boto.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) uiLlums/boto.h -o .moc/moc_boto.cpp

.moc/moc_finestraLlums.cpp: uiLlums/finestraLlums.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) uiLlums/finestraLlums.h -o .moc/moc_finestraLlums.cpp

.moc/moc_sliderText.cpp: uiLlums/sliderText.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) uiLlums/sliderText.h -o .moc/moc_sliderText.cpp

.moc/moc_textField.cpp: uiLlums/textField.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) uiLlums/textField.h -o .moc/moc_textField.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

.obj/GLWidgetPlugin.o: GLWidgetPlugin.cpp GLWidget.h \
		Point.h \
		Scene.h \
		ObjectRef.h \
		Color.h \
		Object.h \
		Vertex.h \
		Box.h \
		Face.h \
		MaterialLib.h \
		Material.h \
		Tauler.h \
		GLWidgetPlugin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/GLWidgetPlugin.o GLWidgetPlugin.cpp

.obj/GLWidget.o: GLWidget.cpp GLWidget.h \
		Point.h \
		Scene.h \
		ObjectRef.h \
		Color.h \
		Object.h \
		Vertex.h \
		Box.h \
		Face.h \
		MaterialLib.h \
		Material.h \
		Tauler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/GLWidget.o GLWidget.cpp

.obj/Object.o: Object.cpp Object.h \
		Vertex.h \
		Point.h \
		Box.h \
		Face.h \
		MaterialLib.h \
		Material.h \
		Color.h \
		Scene.h \
		ObjectRef.h \
		Tauler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Object.o Object.cpp

.obj/ObjectRef.o: ObjectRef.cpp ObjectRef.h \
		Color.h \
		Point.h \
		Object.h \
		Vertex.h \
		Box.h \
		Face.h \
		MaterialLib.h \
		Material.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ObjectRef.o ObjectRef.cpp

.obj/Face.o: Face.cpp Face.h \
		Vertex.h \
		Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Face.o Face.cpp

.obj/Vertex.o: Vertex.cpp Vertex.h \
		Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Vertex.o Vertex.cpp

.obj/Color.o: Color.cpp Color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Color.o Color.cpp

.obj/Box.o: Box.cpp Box.h \
		Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Box.o Box.cpp

.obj/Material.o: Material.cpp Material.h \
		Color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Material.o Material.cpp

.obj/MaterialLib.o: MaterialLib.cpp MaterialLib.h \
		Material.h \
		Color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/MaterialLib.o MaterialLib.cpp

.obj/Point.o: Point.cpp Point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Point.o Point.cpp

.obj/Scene.o: Scene.cpp Scene.h \
		ObjectRef.h \
		Color.h \
		Point.h \
		Object.h \
		Vertex.h \
		Box.h \
		Face.h \
		MaterialLib.h \
		Material.h \
		Tauler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Scene.o Scene.cpp

.obj/Tauler.o: Tauler.cpp Tauler.h \
		Material.h \
		Color.h \
		Object.h \
		Vertex.h \
		Point.h \
		Box.h \
		Face.h \
		MaterialLib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Tauler.o Tauler.cpp

.obj/boto.o: uiLlums/boto.cpp uiLlums/boto.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/boto.o uiLlums/boto.cpp

.obj/finestraLlums.o: uiLlums/finestraLlums.cpp uiLlums/finestraLlums.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/finestraLlums.o uiLlums/finestraLlums.cpp

.obj/sliderText.o: uiLlums/sliderText.cpp uiLlums/sliderText.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/sliderText.o uiLlums/sliderText.cpp

.obj/textField.o: uiLlums/textField.cpp uiLlums/textField.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/textField.o uiLlums/textField.cpp

.obj/moc_GLWidgetPlugin.o: .moc/moc_GLWidgetPlugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_GLWidgetPlugin.o .moc/moc_GLWidgetPlugin.cpp

.obj/moc_GLWidget.o: .moc/moc_GLWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_GLWidget.o .moc/moc_GLWidget.cpp

.obj/moc_boto.o: .moc/moc_boto.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_boto.o .moc/moc_boto.cpp

.obj/moc_finestraLlums.o: .moc/moc_finestraLlums.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_finestraLlums.o .moc/moc_finestraLlums.cpp

.obj/moc_sliderText.o: .moc/moc_sliderText.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_sliderText.o .moc/moc_sliderText.cpp

.obj/moc_textField.o: .moc/moc_textField.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_textField.o .moc/moc_textField.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home2/users/alumnes/1068258//.designer/plugins/designer/ || $(MKDIR) $(INSTALL_ROOT)/home2/users/alumnes/1068258//.designer/plugins/designer/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/home2/users/alumnes/1068258/.designer/plugins/designer/$(TARGET)"
	-strip --strip-unneeded "$(INSTALL_ROOT)/home2/users/alumnes/1068258/.designer/plugins/designer/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/home2/users/alumnes/1068258/.designer/plugins/designer/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/home2/users/alumnes/1068258//.designer/plugins/designer/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

